// log.SetOutput(file)
// log.SetFormatter(&log.JSONFormatter{})


// _ "github.com/mileusna/crontab"
//func testConfig() {
//	cfg, err := config.LoadConfiguration("config/comic-hero.json")
//	if err != nil {
//		log.Fatalln(err)
//	}
//
//	fmt.Println(cfg.Server.Address)
//	fmt.Println(cfg.Server.Port)
//	fmt.Println(cfg.Server.ContextPath)
//	fmt.Println(cfg.Comics[0].Name)
//
//func doTheTask() {
//	log.Println("Inside the task!")
//}


/*
LoadConfiguration unmarshalls the given JSON file content and produces a completely populated Config
structure, containing all the application configuration.
*/
func LoadConfiguration(file string) (*Config, error) {
    var config Config

    configFile, err := os.Open(file)
    if err != nil {
        return nil, err
    }

    defer configFile.Close()

    jsonParser := json.NewDecoder(configFile)
    err = jsonParser.Decode(&config)
    if err != nil {
        return nil, err
    }

    return &config, nil
}

{
    "server": {
        "address": "0.0.0.0",
        "port": 8080,
        "contextPath": "/comic-hero"
    },
    "comics": [
        {
            "id": "10",
            "name": "sinfest",
            "enabled": true,
            "proxyImage": false
        },
        {
            "id": "20",
            "name": "dilbert",
            "enabled": true,
            "proxyImage": false
        },
        {
            "id": "30",
            "name": "oglaf",
            "enabled": true,
            "proxyImage": true
        }
    ]
}

